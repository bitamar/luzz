name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: api/package-lock.json
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
        run_install: false
    
    - name: Install dependencies
      working-directory: ./api
      run: pnpm install --frozen-lockfile
    
    - name: Setup test database
      working-directory: ./api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        DATABASE_URL_TEST: postgresql://postgres:postgres@localhost:5432/postgres_test
        CI: true
      run: node scripts/setup-test-db.js
    
    - name: Run linting
      working-directory: ./api
      run: pnpm lint || echo "Linting not configured yet"
    
    - name: Run type checking
      working-directory: ./api
      run: pnpm type-check || npx tsc --noEmit
    
    - name: Run tests
      working-directory: ./api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        DATABASE_URL_TEST: postgresql://postgres:postgres@localhost:5432/postgres_test
        NODE_ENV: test
        CI: true
      run: pnpm test:ci
    
    - name: Generate test coverage
      working-directory: ./api
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/postgres
        DATABASE_URL_TEST: postgresql://postgres:postgres@localhost:5432/postgres_test
        NODE_ENV: test
        CI: true
      run: pnpm test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./api/coverage/lcov.info
        flags: api
        name: api-coverage
        fail_ci_if_error: false
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.node-version }}
        path: |
          api/test-results.xml
          api/coverage/
          api/test-performance/
    
    - name: Performance regression check
      working-directory: ./api
      if: github.event_name == 'pull_request'
      run: |
        echo "Checking for performance regressions..."
        # This would compare current performance with baseline
        # For now, just show the performance data
        if [ -d "test-performance" ]; then
          echo "Performance data available:"
          ls -la test-performance/
        fi