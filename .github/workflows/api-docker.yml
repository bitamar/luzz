name: Build and Push API Image

on:
  push:
    branches: ['main']
    paths:
      - 'api/**'
      - 'helm/**'
      - '.github/workflows/**'

jobs:
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (multi-arch)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: api/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            malshinim/luzapi:latest
            malshinim/luzapi:sha-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: Deploy to k3s
    needs: docker
    runs-on: ubuntu-latest
    env:
      DEPLOY_HOST: ${{ vars.SSH_HOST }}
      DEPLOY_USER: ${{ vars.SSH_USER }}
      DEPLOY_PORT: ${{ vars.SSH_PORT }}
      DEPLOY_KEY: ${{ secrets.SSH_KEY }}
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.DEPLOY_HOST }}
          username: ${{ env.DEPLOY_USER }}
          key: ${{ env.DEPLOY_KEY }}
          port: ${{ env.DEPLOY_PORT }}
          script: |
            set -euo pipefail
            TAG="sha-${{ github.sha }}"
            cd ~/luzz || git clone https://github.com/bitamar/luzz.git ~/luzz && cd ~/luzz
            git pull --ff-only
            # Ensure prod namespace exists (idempotent)
            kubectl create namespace prod --dry-run=client -o yaml | kubectl apply -f -
            # Ensure Docker Hub pull secret exists in prod (idempotent)
            kubectl -n prod create secret docker-registry dockerhub-cred \
              --docker-server=https://index.docker.io/v1/ \
              --docker-username="${{ secrets.DOCKERHUB_USERNAME }}" \
              --docker-password="${{ secrets.DOCKERHUB_TOKEN }}" \
              --dry-run=client -o yaml | kubectl apply -f -
            # Ensure app-config secret exists/updated (idempotent)
            kubectl -n prod create secret generic app-config \
              --from-literal=JWT_SECRET="${{ secrets.JWT_SECRET }}" \
              --from-literal=GOOGLE_CLIENT_IDS="${{ secrets.GOOGLE_CLIENT_IDS }}" \
              --dry-run=client -o yaml | kubectl apply -f -
            # Deploy API using latest image
            helm --kubeconfig /etc/rancher/k3s/k3s.yaml upgrade --install luz-api ./helm/luz-api \
              -n prod -f helm/luz-api/values-prod.yaml \
              --set fullnameOverride=luz-api \
              --set image.repository=malshinim/luzapi \
              --set image.tag=${TAG} \
              --set service.type=ClusterIP
            # Deploy/refresh Caddy
            helm --kubeconfig /etc/rancher/k3s/k3s.yaml upgrade --install caddy ./helm/caddy \
              -n prod --set apiNamespace=prod --set apiService=luz-api
